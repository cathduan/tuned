{"ast":null,"code":"var _jsxFileName = \"/Users/charlieney/Software-Design/tuned/web-app/src/components/SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./SearchBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchBar = ({\n  setResults\n}) => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const fetchData = async value => {\n    if (!value) return;\n    try {\n      var _data$releases;\n      const response = await fetch(`https://musicbrainz.org/ws/2/release/?query=${encodeURIComponent(value)}&fmt=json&limit=20`);\n      const data = await response.json();\n\n      // Filter releases to only include those of type 'Album' or 'EP'\n      const results = (_data$releases = data.releases) === null || _data$releases === void 0 ? void 0 : _data$releases.filter(release => release[\"release-group\"] && (release[\"release-group\"][\"primary-type\"] === \"Album\" || release[\"release-group\"][\"primary-type\"] === \"EP\")).map(release => {\n        var _release$artistCredi, _release$releaseGrou;\n        return {\n          id: release.id,\n          title: release.title,\n          artist: (_release$artistCredi = release[\"artist-credit\"]) === null || _release$artistCredi === void 0 ? void 0 : _release$artistCredi.map(artist => artist.name).join(\", \"),\n          firstReleaseDate: release.date,\n          type: (_release$releaseGrou = release[\"release-group\"]) === null || _release$releaseGrou === void 0 ? void 0 : _release$releaseGrou[\"primary-type\"]\n        };\n      });\n      setResults(results || []);\n    } catch (error) {\n      console.error(\"Error fetching data from MusicBrainz:\", error);\n      setResults([]);\n    }\n  };\n  const handleSearch = value => {\n    setInput(value);\n    fetchData(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Type to search for an album title...\",\n      value: input,\n      onChange: e => handleSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"RL+Zbs2TIka0YpcBOJptmHqCgYA=\");\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SearchBar","setResults","_s","input","setInput","fetchData","value","_data$releases","response","fetch","encodeURIComponent","data","json","results","releases","filter","release","map","_release$artistCredi","_release$releaseGrou","id","title","artist","name","join","firstReleaseDate","date","type","error","console","handleSearch","className","children","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/charlieney/Software-Design/tuned/web-app/src/components/SearchBar.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./SearchBar.css\";\n\nexport const SearchBar = ({ setResults }) => {\n  const [input, setInput] = useState(\"\");\n\n  const fetchData = async (value) => {\n    if (!value) return;\n\n    try {\n      const response = await fetch(\n        `https://musicbrainz.org/ws/2/release/?query=${encodeURIComponent(\n          value\n        )}&fmt=json&limit=20`\n      );\n      const data = await response.json();\n\n      // Filter releases to only include those of type 'Album' or 'EP'\n      const results = data.releases\n        ?.filter(\n          (release) =>\n            release[\"release-group\"] &&\n            (release[\"release-group\"][\"primary-type\"] === \"Album\" ||\n              release[\"release-group\"][\"primary-type\"] === \"EP\")\n        )\n        .map((release) => ({\n          id: release.id,\n          title: release.title,\n          artist: release[\"artist-credit\"]\n            ?.map((artist) => artist.name)\n            .join(\", \"),\n          firstReleaseDate: release.date,\n          type: release[\"release-group\"]?.[\"primary-type\"],\n        }));\n\n      setResults(results || []);\n    } catch (error) {\n      console.error(\"Error fetching data from MusicBrainz:\", error);\n      setResults([]);\n    }\n  };\n\n  const handleSearch = (value) => {\n    setInput(value);\n    fetchData(value);\n  };\n\n  return (\n    <div className=\"input-wrapper\">\n      <input\n        placeholder=\"Type to search for an album title...\"\n        value={input}\n        onChange={(e) => handleSearch(e.target.value)}\n      />\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,OAAO,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,SAAS,GAAG,MAAOC,KAAK,IAAK;IACjC,IAAI,CAACA,KAAK,EAAE;IAEZ,IAAI;MAAA,IAAAC,cAAA;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+CAA+CC,kBAAkB,CAC/DJ,KACF,CAAC,oBACH,CAAC;MACD,MAAMK,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;;MAElC;MACA,MAAMC,OAAO,IAAAN,cAAA,GAAGI,IAAI,CAACG,QAAQ,cAAAP,cAAA,uBAAbA,cAAA,CACZQ,MAAM,CACLC,OAAO,IACNA,OAAO,CAAC,eAAe,CAAC,KACvBA,OAAO,CAAC,eAAe,CAAC,CAAC,cAAc,CAAC,KAAK,OAAO,IACnDA,OAAO,CAAC,eAAe,CAAC,CAAC,cAAc,CAAC,KAAK,IAAI,CACvD,CAAC,CACAC,GAAG,CAAED,OAAO;QAAA,IAAAE,oBAAA,EAAAC,oBAAA;QAAA,OAAM;UACjBC,EAAE,EAAEJ,OAAO,CAACI,EAAE;UACdC,KAAK,EAAEL,OAAO,CAACK,KAAK;UACpBC,MAAM,GAAAJ,oBAAA,GAAEF,OAAO,CAAC,eAAe,CAAC,cAAAE,oBAAA,uBAAxBA,oBAAA,CACJD,GAAG,CAAEK,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAC,CAC7BC,IAAI,CAAC,IAAI,CAAC;UACbC,gBAAgB,EAAET,OAAO,CAACU,IAAI;UAC9BC,IAAI,GAAAR,oBAAA,GAAEH,OAAO,CAAC,eAAe,CAAC,cAAAG,oBAAA,uBAAxBA,oBAAA,CAA2B,cAAc;QACjD,CAAC;MAAA,CAAC,CAAC;MAELlB,UAAU,CAACY,OAAO,IAAI,EAAE,CAAC;IAC3B,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC7D3B,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,MAAM6B,YAAY,GAAIxB,KAAK,IAAK;IAC9BF,QAAQ,CAACE,KAAK,CAAC;IACfD,SAAS,CAACC,KAAK,CAAC;EAClB,CAAC;EAED,oBACEP,OAAA;IAAKgC,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BjC,OAAA;MACEkC,WAAW,EAAC,sCAAsC;MAClD3B,KAAK,EAAEH,KAAM;MACb+B,QAAQ,EAAGC,CAAC,IAAKL,YAAY,CAACK,CAAC,CAACC,MAAM,CAAC9B,KAAK;IAAE;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACtC,EAAA,CArDWF,SAAS;AAAAyC,EAAA,GAATzC,SAAS;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}